1、一个较为成熟、安排合理的C++工程应该包含 bin(存放可执行文件)、 build(编译时生成中间文件存放处)、 data(存放程序运行需要的数据和参数文件)、 lib(存放编译生成的链接文件)、 include(存放源码的.h文件)、 src(存放源码.cpp文件)

2、这样安排可以有两个CMakeLisets.txt文件，一个放在同级目录下，另一个放在src目录下。

3、同级目录下的CMakeLists.txt文件组织如下：

CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )                  // 编译此项目最低cmake版本
PROJECT( slam )                                        // 项目名称

SET(CMAKE_CXX_COMPILER "g++")                          // 使用g++构建
SET(CMAKE_BUILD_TYPE Release)                          // 设置可执行文件构建模式，可为DEBUG
SET( CMAKE_CXX_FLAGS "-std=c++11 -O3")                 // 
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)  // 设置可执行文件存放路径
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)     // 设置链接库文件存放路径

INCLUDE_DIRECTORIES( ${PROJECT_SOURCE_DIR}/include)    // 设置头文件路径
LINK_DIRECTORIES( ${PROJECT_SOURCE_DIR}/lib)           // 设置链接库文件路径

ADD_SUBDIRECTORY( ${PROJECT_SOURCE_DIR}/src)           // 添加子目录，进入子目录编译

4、src目录下的CMakeLists.txt文件组织如下：太复杂，慢慢摸索


